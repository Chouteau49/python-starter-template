# This workflow will install Python dependencies, run tests, lint, and measure coverage
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linting et Formatage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Installer les dépendances
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install ruff

      - name: Linting avec Ruff
        run: ruff check src tests

  test:
    name: Tests Unitaires et Couverture
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Installer Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Installer les dépendances
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -e .[dev]

      - name: Exécuter les tests avec couverture
        run: |
          source venv/bin/activate
          pytest --cov=src --cov-report=xml --cov-report=html

      - name: Upload des rapports de couverture
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

  docker:
    name: Build et Push Docker
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Connexion à DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build de l'image Docker
        run: |
          docker build -t python-starter-template:latest .

      - name: Push de l'image Docker
        run: |
          docker tag python-starter-template:latest ${{ secrets.DOCKER_USERNAME }}/python-starter-template:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/python-starter-template:latest
