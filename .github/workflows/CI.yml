name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint_and_security:
    name: Linting, Formatage et Sécurité
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installer Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12 # Correspond à target-version dans pyproject.toml

      - name: Mise en cache des dépendances
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Installer les dépendances (avec setuptools/dev)
        # Utilise l'installation en mode éditable avec l'extra [dev] pour inclure ruff, pre-commit, bandit, etc.
        run: pip install --upgrade pip setuptools && pip install -e .[dev]

      - name: Vérification du Linting avec Ruff
        # ruff check retourne une erreur si des problèmes sont trouvés.
        run: ruff check src tests

      - name: Vérification du Formatage avec Ruff Format
        # ruff format --check s'assure qu'aucun fichier n'a besoin d'être reformaté.
        run: ruff format --check src tests

      - name: Analyse Statique des Types avec MyPy
        # Utilise l'argument --ignore-missing-imports configuré dans .pre-commit-config.yaml
        run: mypy src --ignore-missing-imports

      - name: Analyse de Sécurité avec Bandit
        # Utilise la configuration de pyproject.toml (-c) et analyse le code source (src)
        run: bandit -r src -c pyproject.toml


  test:
    name: Exécution des Tests et Couverture
    runs-on: ubuntu-latest
    # Teste sur deux versions de Python pour une meilleure compatibilité
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installer Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Mise en cache des dépendances
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-

      - name: Installer les dépendances
        run: pip install --upgrade pip setuptools && pip install -e .[dev]

      - name: Exécuter les Tests avec Couverture
        # Utilise les options définies dans [tool.pytest.ini_options] pour le rapport de couverture
        run: pytest

      - name: Afficher le résumé de la Couverture
        run: |
          echo "::group::Rapport de Couverture"
          coverage report -m
          echo "::endgroup::"
