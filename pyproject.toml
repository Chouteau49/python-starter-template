[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "python-starter-template"
dynamic = ["version"]
description = "Un template structuré pour projets Python modernes"
authors = [
    {name = "Chouteau49", email = "chouteau49@example.com"},
]
readme = "README.md"
dependencies = [
    "colorama>=0.4.6",  # Pour logs avec couleurs
    "rich>=13.0.0",     # Pour logs avancés et console
    "pydantic>=2.0.0",  # Pour modèles typés
    "pydantic-settings>=2.0.0",  # Pour gestion des settings
    "python-dotenv>=1.0.0",  # Pour variables d'env
    "prometheus-client>=0.19.0",  # Pour métriques
    "pytest>=7.0.0",    # Pour tests
    "pytest-cov>=4.0.0", # Pour couverture
    "ruff>=0.1.0",      # Pour linting et formatage
]

[project.optional-dependencies]
dev = [
    "pre-commit>=3.0.0",
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.6.0",
    "towncrier>=23.0.0",
    # Optional dev dependencies for running more realistic tests
    "sqlalchemy>=2.0.0",
    "fastapi>=0.95.0",
    "pytest-asyncio>=0.22.0",
    # Extras / runtime data useful for development & tests
    "pydantic[email]>=2.0.0",  # fournit email-validator via l'extra
    "tzdata>=2025.2",         # nécessaire pour ZoneInfo (ex: Europe/Paris)
]

[tool.setuptools_scm]
write_to = "src/app/_version.py"

[tool.setuptools.packages.find]
where = ["src"]
include = ["app*"]

[tool.setuptools.package-data]
"app" = ["_version.py"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B017", "E402"] # Ajout de E402 ici pour ignorer sys.path.insert dans tous les sous-dossiers
"tests/*" = ["E402"] # Pour les fichiers à la racine du dossier tests


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=src --cov-report=html --cov-report=term-missing"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.towncrier]
package = "app"
package_dir = "src"
filename = "CHANGELOG.md"
directory = "newsfragments"
title_format = "## [{version}] - {project_date}"
template = "newsfragments/template.md"
issue_format = "`#{issue}`"
underlines = ["", "", ""]

[[tool.towncrier.type]]
directory = "feature"
name = "Nouvelles fonctionnalités"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Corrections de bugs"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "removal"
name = "Suppressions"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Divers"
showcontent = true

# Configuration pour Bandit
[tool.bandit]
# Spécifie les fichiers à exclure (tests) et les tests à ignorer
exclude_dirs = ["tests"]
targets = ["src"] # Se concentrer uniquement sur le code source de production
skips = ["B101"] # B101 (assert) est souvent désactivé pour les tests (même si exclude_dirs est là, c'est une sécurité)

[tool.poetry.dependencies]
python = ">=3.13"
pydantic-settings = ">=2.0.0"

[tool.poetry]
name = "python-starter-template"
version = "0.1.0"
description = "Un template structuré pour projets Python modernes"
authors = ["Chouteau49 <chouteau49@example.com>"]

[dependency-groups]
dev = [
    "ruff (>=0.14.2,<0.15.0)"
]
